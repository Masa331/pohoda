module Pohoda
  class Invoice
    include Utils
    attr_accessor :xml

    def initialize(xml)
      @xml = xml
    end

    def internal_id
      t 'inv:invoiceHeader/inv:id'
    end

    def external_reference
      ref_xml = xml.at_xpath('inv:invoiceHeader/inv:extId')

      ExternalReference.new(ref_xml)
    end

    def type
      t 'inv:invoiceHeader/inv:invoiceType'
    end

    def sphere
      t 'inv:invoiceHeader/inv:sphereType'
    end

    def public_id
      id_xml = xml.at_xpath('inv:invoiceHeader/inv:number')

      PublicId.new(id_xml)
    end

    def variable_symbol
      t 'inv:invoiceHeader/inv:symVar'
    end

    def pairing_symbol
      t 'inv:invoiceHeader/inv:symPar'
    end

    def issue_date
      t 'inv:invoiceHeader/inv:date'
    end

    def tax_payment_date
      t 'inv:invoiceHeader/inv:dateTax'
    end

    def accounting_date
      t 'inv:invoiceHeader/inv:dateAccounting'
    end

    def vat_control_statement_date
      t 'inv:invoiceHeader/inv:dateKHDPH'
    end

    def due_date
      t 'inv:invoiceHeader/inv:dateDue'
    end

    def vat_application_date
      t 'inv:invoiceHeader/inv:dateApplicationVAT'
    end

    def accounting
      Accounting.new(e 'inv:invoiceHeader/inv:accounting')
    end

    def vat_classification
      VatClassification.new(e 'inv:invoiceHeader/inv:classificationVAT')
    end

    def vat_control_number
      t 'inv:invoiceHeader/inv:numberKHDPH'
    end

    def text
      t 'inv:invoiceHeader/inv:text'
    end

    def partner
      Partner.new(e 'inv:invoiceHeader/inv:partnerIdentity')
    end

    def issuer
      Issuer.new(e 'inv:invoiceHeader/inv:myIdentity')
    end

    def order
      Reference.new(e 'inv:invoiceHeader/inv:order')
    end

    def order_id
      t 'inv:invoiceHeader/inv:numberOrder'
    end

    def order_date
      t 'inv:invoiceHeader/inv:dateOrder'
    end

    def price_level
      Reference.new(e 'inv:invoiceHeader/inv:priceLevel')
    end

    def payment_method
      PaymentMethod.new(e 'inv:invoiceHeader/inv:paymentType')
    end

    def bank_account
      account_xml = xml.at_xpath('inv:invoiceHeader/inv:account')

      BankAccount.new(account_xml || BlankXml.new)
    end

    def constant_symbol
      t 'inv:invoiceHeader/inv:symConst'
    end

    def specific_symbol
      t 'inv:invoiceHeader/inv:symSpec'
    end

    def payment_terminal
      t 'inv:invoiceHeader/inv:paymentTerminal'
    end

    def department
      department_xml = xml.at_xpath('inv:invoiceHeader/inv:centre')

      Reference.new(department_xml || BlankXml.new)
    end

    def activity
      activity_xml = xml.at_xpath('inv:invoiceHeader/inv:centre')

      Reference.new(activity_xml || BlankXml.new)
    end

    def contract
      contract_xml = xml.at_xpath('inv:invoiceHeader/inv:contract')

      Reference.new(contract_xml || BlankXml.new)
    end

    def eu_vat_registration
      registration_xml = xml.at_xpath('inv:invoiceHeader/inv:regVATinEU')

      Reference.new(registration_xml || BlankXml.new)
    end

    def moss
      t 'inv:invoiceHeader/inv:MOSS/typ:ids'
    end

    def moss_resource
      t 'inv:invoiceHeader/inv:evidentiaryResourcesMOSS/typ:ids'
    end

    def moss_period
      t 'inv:invoiceHeader/inv:accountingPeriodMOSS'
    end

    def carrier
      registration_xml = xml.at_xpath('inv:invoiceHeader/inv:carrier')

      Reference.new(registration_xml || BlankXml.new)
    end

    def note
      t 'inv:invoiceHeader/inv:note'
    end

    def internal_note
      t 'inv:invoiceHeader/inv:intNote'
    end

    def items
      xml.xpath('inv:invoiceDetail/inv:invoiceItem').map { |i| InvoiceItem.new(i) }
    end

    def rounding_type
      t 'inv:invoiceSummary/inv:roundingDocument'
    end

    def vat_rounding_type
      t 'inv:invoiceSummary/inv:roundingVAT'
    end

    def vat_from_rounding
      t 'inv:invoiceSummary/inv:calculateVAT'
    end

    def czk_total
      total_xml = xml.at_xpath('inv:invoiceSummary/inv:homeCurrency')

      CzkTotal.new(total_xml || BlankXml.new)
    end

    def foreign_total
      total_xml = xml.at_xpath('inv:invoiceSummary/inv:foreignCurrency')

      ForeignTotal.new(total_xml || BlankXml.new)
    end
  end
end
